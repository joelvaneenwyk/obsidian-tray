import builtins from 'builtin-modules';
import esbuild from 'esbuild';
import process from 'process';

const banner = `/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
If you want to view the source, please visit the GitHub repository of this plugin.
*/
`;
const isProductionBuild = process.argv[2] === 'production';
const isWatch = process.argv[2] === 'watch';
const context = await esbuild.context({
  banner: {
    js: banner
  },
  outdir: 'dist',
  entryPoints: ['src/main.ts'],
  bundle: true,
  mainFields: ['module', 'main'],
  format: 'cjs',
  target: 'es2018',
  logLevel: isProductionBuild ? 'info' : 'debug',
  sourcemap: isProductionBuild ? false : 'inline',
  treeShaking: true,
  minify: isProductionBuild,
  external: [
    'obsidian',
    'electron',
    '@electron/remote',
    '@codemirror/autocomplete',
    '@codemirror/collab',
    '@codemirror/commands',
    '@codemirror/language',
    '@codemirror/lint',
    '@codemirror/search',
    '@codemirror/state',
    '@codemirror/view',
    'loglevel',
    '@lezer/common',
    '@lezer/highlight',
    '@lezer/lr',
    ...builtins
  ]
});

context
  .rebuild()
  .then(() => {
    console.log("Production build. Generated output: 'main.js'");
  })
  .catch(() => {
    console.log('Build failed!');
    process.exit(1);
  })
  .finally(() => {
    if (isWatch) {
      context.watch();
    }
    process.exit(0);
  });
